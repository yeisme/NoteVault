// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3

package handler

import (
	"net/http"

	file "github.com/yeisme/notevault/internal/handler/file"
	"github.com/yeisme/notevault/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				// 列出文件，支持分页、筛选和排序。
				Method:  http.MethodGet,
				Path:    "/",
				Handler: file.ListFilesHandler(serverCtx),
			},
			{
				// 根据文件ID删除文件。
				Method:  http.MethodDelete,
				Path:    "/:fileId",
				Handler: file.DeleteFileHandler(serverCtx),
			},
			{
				// 获取文件的版本历史。
				Method:  http.MethodGet,
				Path:    "/:fileId/versions",
				Handler: file.GetFileVersionsHandler(serverCtx),
			},
			{
				// (高级) 获取文件两个版本之间的差异信息 (主要针对文本文件)。
				Method:  http.MethodGet,
				Path:    "/:fileId/versions/diff",
				Handler: file.GetFileVersionDiffHandler(serverCtx),
			},
			{
				// 将文件恢复到特定版本。
				Method:  http.MethodPost,
				Path:    "/:fileId/versions/revert",
				Handler: file.RevertFileVersionHandler(serverCtx),
			},
			{
				// 批量删除文件。
				Method:  http.MethodPost,
				Path:    "/batch/delete",
				Handler: file.BatchDeleteFilesHandler(serverCtx),
			},
			{
				// 根据文件ID下载文件。可选下载特定版本。
				Method:  http.MethodGet,
				Path:    "/download/:fileId",
				Handler: file.DownloadFileHandler(serverCtx),
			},
			{
				// 获取特定文件的元数据。可选获取特定版本的元数据。
				Method:  http.MethodGet,
				Path:    "/metadata/:fileId",
				Handler: file.GetFileMetadataHandler(serverCtx),
			},
			{
				// 更新特定文件的元数据。这通常会创建一个新版本。
				Method:  http.MethodPut,
				Path:    "/metadata/:fileId",
				Handler: file.UpdateFileMetadataHandler(serverCtx),
			},
			{
				// 上传一个新文件。实际文件以 multipart/form-data 形式发送。
				Method:  http.MethodPost,
				Path:    "/upload",
				Handler: file.UploadFileHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/api/v1/files"),
	)
}
